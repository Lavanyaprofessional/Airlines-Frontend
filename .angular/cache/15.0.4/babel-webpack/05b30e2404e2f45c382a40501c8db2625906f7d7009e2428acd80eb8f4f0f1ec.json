{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookServiceService {\n  constructor(httpclient) {\n    this.httpclient = httpclient;\n    this.baseURL = \"http://localhost:8060/book/\";\n    this.book = [];\n  }\n  getBookList() {\n    return this.httpclient.get(`${this.baseURL + \"bookings\"}`);\n  }\n  getBookByBookId(bookId) {\n    return this.httpclient.get(`${this.baseURL + \"bookings\"}/${bookId}`);\n  }\n  saveBook(flight, passengers) {\n    let body = {\n      \"flightNumber\": flight.flightId,\n      \"origin\": flight.origin,\n      \"destination\": flight.destination,\n      \"flightDate\": flight.flightDate,\n      \"passenger\": passengers\n    };\n    console.log(body);\n    return this.httpclient.post(`${this.baseURL + \"bookings\"}`, body);\n  }\n}\nBookServiceService.ɵfac = function BookServiceService_Factory(t) {\n  return new (t || BookServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nBookServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookServiceService,\n  factory: BookServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,kBAAkB;EAM7BC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAFvB,YAAO,GAAC,6BAA6B;IAG1C,IAAI,CAACC,IAAI,GAAC,EAAE;EACd;EAEAC,WAAW;IACT,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAS,GAAG,IAAI,CAACC,OAAO,GAAC,UAAU,EAAE,CAAC;EAElE;EAEAC,eAAe,CAACC,MAAuB;IACrC,OAAO,IAAI,CAACN,UAAU,CAACG,GAAG,CAAO,GAAG,IAAI,CAACC,OAAO,GAAC,UAAU,IAAIE,MAAM,EAAE,CAAC;EAE1E;EAEAC,QAAQ,CAACC,MAAa,EAACC,UAAsB;IAC3C,IAAIC,IAAI,GAAE;MACR,cAAc,EAACF,MAAM,CAACG,QAAQ;MAC9B,QAAQ,EAACH,MAAM,CAACI,MAAM;MACtB,aAAa,EAACJ,MAAM,CAACK,WAAW;MAChC,YAAY,EAACL,MAAM,CAACM,UAAU;MAC9B,WAAW,EAACL;KACb;IACDM,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;IACjB,OAAO,IAAI,CAACV,UAAU,CAACiB,IAAI,CAAO,GAAG,IAAI,CAACb,OAAO,GAAC,UAAU,EAAE,EAACM,IAAI,CAAC;EACtE;;AA9BWZ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAoB,SAAlBpB,kBAAkB;EAAAqB,YAFjB;AAAM","names":["BookServiceService","constructor","httpclient","book","getBookList","get","baseURL","getBookByBookId","bookId","saveBook","flight","passengers","body","flightId","origin","destination","flightDate","console","log","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\hackathon\\Airlines-Frontend\\src\\app\\services\\book-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Book } from '../book';\nimport { Flight } from '../flight';\nimport { Passenger } from '../passenger';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookServiceService {\n  book: Book[];\n  ret : any;\n\n private baseURL=\"http://localhost:8060/book/\"\n\n  constructor(private httpclient:HttpClient) { \n    this.book=[]\n  }\n\n  getBookList():Observable<Book[]>{\n    return this.httpclient.get<Book[]>(`${this.baseURL+\"bookings\"}`);\n\n  }\n\n  getBookByBookId(bookId:number|undefined):Observable<Book>{\n    return this.httpclient.get<Book>(`${this.baseURL+\"bookings\"}/${bookId}`);\n\n  }\n\n  saveBook(flight:Flight,passengers:Passenger[]){\n    let body= {\n      \"flightNumber\":flight.flightId,\n      \"origin\":flight.origin,\n      \"destination\":flight.destination,\n      \"flightDate\":flight.flightDate,\n      \"passenger\":passengers\n    }\n    console.log(body);\n    return this.httpclient.post<Book>(`${this.baseURL+\"bookings\"}`,body);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}