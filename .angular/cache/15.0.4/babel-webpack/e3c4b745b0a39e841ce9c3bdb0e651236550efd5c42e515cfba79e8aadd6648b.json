{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/flight-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction FlightListComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function FlightListComponent_tr_16_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const flight_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateFlight(flight_r1.flightId));\n    });\n    i0.ɵɵtext(11, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function FlightListComponent_tr_16_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const flight_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteFlight(flight_r1.flightId));\n    });\n    i0.ɵɵtext(13, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const flight_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", flight_r1.flightId, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", flight_r1.origin, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", flight_r1.destination, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", flight_r1.flightdate, \" \");\n  }\n}\nexport class FlightListComponent {\n  //flightService:FlightServiceService=new FlightServiceService();\n  //flightUpdate:Flight=new Flight();\n  constructor(flightService, router) {\n    // this.flights=[{\n    //   \"flightNumber\": \"abc123456\",\n    //   \"origin\": \"bangalore\",\n    //   \"destination\": \"delhi\",\n    //   \"flightDate\":\"10/11/2020\"\n    // },\n    // {\n    //   \"flightNumber\": \"pqr123456\",\n    // \"origin\": \"mumbai\",\n    // \"destination\": \"bangalore\",\n    // \"flightDate\":\"22/09/2022\"\n    // }];\n    this.flightService = flightService;\n    this.router = router;\n    this.flights = [];\n  }\n  ngOnInit() {\n    //this.getFlight();\n    console.log(this.flights);\n    if (this.flights.length == 0) {\n      this.getFlight();\n    }\n  }\n  getFlight() {\n    this.flightService.getFlightList().subscribe(data => {\n      this.flights = data;\n      console.log(data);\n      console.log(\"Flights\");\n      console.log(this.flights);\n    });\n  }\n  // updateFlight(flightNumber: string|undefined){\n  //   this.router.navigate(['update-flight',flightNumber]);\n  //   this.flightUpdate=this.flightService.getFlightByflightNumber(\"flightNumber\");\n  //update flight\n  //this.flights=this.flightService.updateFlight(this.flightUpdate)\n  // updateFlight(flightNumber:string|undefined){\n  //   this.router.navigate(['update-flight',flightNumber]);\n  // }\n  updateFlight(flightId) {\n    this.router.navigate(['update-flight', flightId]);\n  }\n  deleteFlight(flightId) {\n    this.flightService.deleteFlight(flightId).subscribe(data => {\n      console.log(data);\n      this.getFlight();\n    });\n  }\n}\nFlightListComponent.ɵfac = function FlightListComponent_Factory(t) {\n  return new (t || FlightListComponent)(i0.ɵɵdirectiveInject(i1.FlightServiceService), i0.ɵɵdirectiveInject(i2.Router));\n};\nFlightListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FlightListComponent,\n  selectors: [[\"app-flight-list\"]],\n  inputs: {\n    flights: \"flights\"\n  },\n  decls: 17,\n  vars: 1,\n  consts: [[2, \"color\", \"rgb(9, 0, 0)\"], [1, \"table\", \"table-stripped\"], [2, \"color\", \"rgba(9, 0, 0, 0.968)\"], [2, \"color\", \"aliceblue\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-info\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 2, \"margin-left\", \"10px\", 3, \"click\"]],\n  template: function FlightListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\", 0);\n      i0.ɵɵtext(1, \"Flight List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 1)(3, \"thead\", 2)(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \"Fight Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Origin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Destination\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Flight Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"tbody\", 3);\n      i0.ɵɵtemplate(16, FlightListComponent_tr_16_Template, 14, 4, \"tr\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.flights);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmxpZ2h0LWxpc3QvZmxpZ2h0LWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztFQUlFIiwic291cmNlc0NvbnRlbnQiOlsiLyoubGlzdC1iZ3tcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vZmxpZ2h0LWxpc3QvaW1hZ2VzL3BsYW5lbGlzdGJnLmpwZycpO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxufSovIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAYQA,0BAAqC;IAE5BA,YAAoB;IAAAA,iBAAK;IAC9BA,0BAAI;IAACA,YAAkB;IAAAA,iBAAK;IAC5BA,0BAAI;IAACA,YAAuB;IAAAA,iBAAK;IACjCA,0BAAI;IAACA,YAAsB;IAAAA,iBAAK;IAEhCA,0BAAI;IACQA;MAAA;MAAA;MAAA;MAAA,OAASA,sDAA6B;IAAA,EAAC;IAAuBA,uBAAM;IAAAA,iBAAS;IACrFA,kCAAoG;IAA5FA;MAAA;MAAA;MAAA;MAAA,OAASA,sDAA6B;IAAA,EAAC;IAAqDA,uBAAM;IAAAA,iBAAS;;;;IAPlHA,eAAoB;IAApBA,mDAAoB;IACpBA,eAAkB;IAAlBA,iDAAkB;IAClBA,eAAuB;IAAvBA,sDAAuB;IACvBA,eAAsB;IAAtBA,qDAAsB;;;ACPvC,OAAM,MAAOC,mBAAmB;EAG9B;EACA;EAEAC,YAAoBC,aAAmC,EAAUC,MAAc;IAC7E;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAZkB,kBAAa,GAAbD,aAAa;IAAgC,WAAM,GAANC,MAAM;IAcrE,IAAI,CAACC,OAAO,GAAC,EAAE;EACjB;EAEAC,QAAQ;IACN;IACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,OAAO,CAAC;IAEzB,IAAI,IAAI,CAACA,OAAO,CAACI,MAAM,IAAI,CAAC,EAAC;MAC3B,IAAI,CAACC,SAAS,EAAE;;EAMpB;EAIQA,SAAS;IACf,IAAI,CAACP,aAAa,CAACQ,aAAa,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAClD,IAAI,CAACR,OAAO,GAAGQ,IAAI;MACnBN,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;MACjBN,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtBD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,OAAO,CAAC;IAC3B,CAAC,CAAC;EAGJ;EACF;EACA;EACA;EAEE;EAEA;EAEA;EACA;EACA;EACAS,YAAY,CAACC,QAAyB;IACpC,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,eAAe,EAACD,QAAQ,CAAC,CAAC;EAClD;EACAE,YAAY,CAACF,QAAyB;IACpC,IAAI,CAACZ,aAAa,CAACc,YAAY,CAACF,QAAQ,CAAC,CAACH,SAAS,CAACC,IAAI,IAAE;MACxDN,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;MACjB,IAAI,CAACH,SAAS,EAAE;IAClB,CAAC,CAAC;EAEJ;;AApEWT,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAiB;EAAAC;IAAAd;EAAA;EAAAe;EAAAC;EAAAC;EAAAC;IAAA;MDVhCvB,6BAAiC;MAAAA,2BAAW;MAAAA,iBAAK;MACjDA,gCAAqC;MAGrBA,4BAAY;MAAAA,iBAAK;MACrBA,0BAAI;MAAAA,sBAAM;MAAAA,iBAAK;MACfA,0BAAI;MAAAA,4BAAW;MAAAA,iBAAK;MACpBA,2BAAI;MAAAA,4BAAW;MAAAA,iBAAK;MACpBA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAGxBA,iCAAgC;MAC5BA,qEAkBK;MACTA,iBAAQ;;;MAnBqBA,gBAAU;MAAVA,qCAAU","names":["i0","FlightListComponent","constructor","flightService","router","flights","ngOnInit","console","log","length","getFlight","getFlightList","subscribe","data","updateFlight","flightId","navigate","deleteFlight","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\hackathon\\Airlines-Frontend\\src\\app\\flight-list\\flight-list.component.html","C:\\hackathon\\Airlines-Frontend\\src\\app\\flight-list\\flight-list.component.ts"],"sourcesContent":["<h2 style=\"color: rgb(9, 0, 0);\">Flight List</h2>\r\n<table class=\"table table-stripped\" >\r\n    <thead style=\"color:rgba(9, 0, 0, 0.968) ;\">\r\n        <tr>\r\n            <th>Fight Number</th>\r\n            <th>Origin</th>\r\n            <th>Destination</th>\r\n            <th>Flight Date</th>\r\n            <th>Actions</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody style=\"color:aliceblue;\">\r\n        <tr *ngFor = \"let flight of flights\">\r\n            \r\n            <td> {{flight.flightId}} </td>\r\n            <td> {{flight.origin}} </td>\r\n            <td> {{flight.destination}} </td>\r\n            <td> {{flight.flightdate}} </td>\r\n            \r\n            <td>\r\n                <button (click)=\"updateFlight(flight.flightId)\" class =\"btn btn-info\">Update</button>\r\n                <button (click)=\"deleteFlight(flight.flightId)\" class =\"btn btn-danger\" style =\"margin-left: 10px;\">Delete</button>\r\n               <!-- <button (click)=\"showDialog = !showDialog\" class=\"btn btn-info\">Update</button>\r\n                <br>\r\n                <app-dialog [(visible)]=\"showDialog\" title=\"update flight\" data-popup=\"width:400;hieght:350\">\r\n                    <button (click) = \"showDialog = !showDialog\" class =\"btn btn-info\">Save\r\n                    </button>\r\n\r\n                </app-dialog>-->\r\n            </td>       \r\n        </tr>\r\n    </tbody>\r\n\r\n</table>\r\n","import { Component , Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Flight } from '../flight';\r\nimport {FlightServiceService}  from '../services/flight-service.service'\r\n\r\n@Component({\r\n  selector: 'app-flight-list',\r\n  templateUrl: './flight-list.component.html',\r\n  styleUrls: ['./flight-list.component.css']\r\n})\r\nexport class FlightListComponent implements OnInit {\r\n\r\n  @Input() flights:Flight[]\r\n  //flightService:FlightServiceService=new FlightServiceService();\r\n  //flightUpdate:Flight=new Flight();\r\n\r\n  constructor(private flightService: FlightServiceService, private router: Router){ \r\n    // this.flights=[{\r\n    //   \"flightNumber\": \"abc123456\",\r\n    //   \"origin\": \"bangalore\",\r\n    //   \"destination\": \"delhi\",\r\n    //   \"flightDate\":\"10/11/2020\"\r\n    // },\r\n    // {\r\n    //   \"flightNumber\": \"pqr123456\",\r\n    // \"origin\": \"mumbai\",\r\n    // \"destination\": \"bangalore\",\r\n    // \"flightDate\":\"22/09/2022\"\r\n    // }];\r\n\r\n    this.flights=[];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //this.getFlight();\r\n    console.log(this.flights);\r\n    \r\n    if (this.flights.length == 0){\r\n      this.getFlight();\r\n    }\r\n    \r\n\r\n    \r\n    \r\n  }\r\n\r\n  \r\n  \r\n  private getFlight(){\r\n    this.flightService.getFlightList().subscribe(data => {\r\n      this.flights = data;\r\n      console.log(data);\r\n      console.log(\"Flights\")\r\n      console.log(this.flights)\r\n    });\r\n    \r\n    \r\n  }\r\n// updateFlight(flightNumber: string|undefined){\r\n//   this.router.navigate(['update-flight',flightNumber]);\r\n//   this.flightUpdate=this.flightService.getFlightByflightNumber(\"flightNumber\");\r\n\r\n  //update flight\r\n\r\n  //this.flights=this.flightService.updateFlight(this.flightUpdate)\r\n\r\n  // updateFlight(flightNumber:string|undefined){\r\n  //   this.router.navigate(['update-flight',flightNumber]);\r\n  // }\r\n  updateFlight(flightId:number|undefined){\r\n    this.router.navigate(['update-flight',flightId]);\r\n  }\r\n  deleteFlight(flightId:number|undefined){\r\n    this.flightService.deleteFlight(flightId).subscribe(data=>{\r\n      console.log(data);\r\n      this.getFlight();\r\n    })\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}