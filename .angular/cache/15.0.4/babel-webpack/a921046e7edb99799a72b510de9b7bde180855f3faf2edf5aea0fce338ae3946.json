{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookServiceService {\n  constructor(httpclient) {\n    this.httpclient = httpclient;\n    this.baseURL = \"http://localhost:8082/\";\n    this.book = [];\n  }\n  getBookList() {\n    return this.httpclient.get(`${this.baseURL + \"bookings\"}`);\n  }\n  getBookByBookId(bookId) {\n    return this.httpclient.get(`${this.baseURL + \"bookings\"}/${bookId}`);\n  }\n  saveBook(book) {\n    return this.httpclient.post(`${this.baseURL + \"bookings\"}`, book);\n  }\n}\nBookServiceService.ɵfac = function BookServiceService_Factory(t) {\n  return new (t || BookServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nBookServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookServiceService,\n  factory: BookServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,kBAAkB;EAO7BC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAFtB,YAAO,GAAC,wBAAwB;IAItC,IAAI,CAACC,IAAI,GAAC,EAAE;EACb;EAEAC,WAAW;IACP,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAS,GAAG,IAAI,CAACC,OAAO,GAAC,UAAU,EAAE,CAAC;EAChE;EAEJC,eAAe,CAACC,MAAuB;IAChC,OAAO,IAAI,CAACN,UAAU,CAACG,GAAG,CAAO,GAAG,IAAI,CAACC,OAAO,GAAC,UAAU,IAAIE,MAAM,EAAE,CAAC;EACzE;EAENC,QAAQ,CAACN,IAAS;IACR,OAAO,IAAI,CAACD,UAAU,CAACQ,IAAI,CAAO,GAAG,IAAI,CAACJ,OAAO,GAAC,UAAU,EAAE,EAACH,IAAI,CAAC;EACpE;;AAtBAH,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAW,SAAlBX,kBAAkB;EAAAY,YAFjB;AAAM","names":["BookServiceService","constructor","httpclient","book","getBookList","get","baseURL","getBookByBookId","bookId","saveBook","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\New folder\\Airline-Frontend\\Airlines-Frontend\\src\\app\\services\\book-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Book } from '../book';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookServiceService {\n\n\n  book: Book[];\n\n  private baseURL=\"http://localhost:8082/\"\n\n  constructor(private httpclient:HttpClient) {\n    \n    this.book=[]\n   }\n   \n   getBookList():Observable<Book[]>{\n       return this.httpclient.get<Book[]>(`${this.baseURL+\"bookings\"}`);\n       }\n\n   getBookByBookId(bookId:number|undefined):Observable<Book>{\n          return this.httpclient.get<Book>(`${this.baseURL+\"bookings\"}/${bookId}`);\n         }\n\n   saveBook(book:Book){\n             return this.httpclient.post<Book>(`${this.baseURL+\"bookings\"}`,book)\n             }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}