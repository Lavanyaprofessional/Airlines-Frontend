{"ast":null,"code":"import { Flight } from '../flight';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/flight-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class CreateFlightComponent {\n  constructor(flightService, router) {\n    this.flightService = flightService;\n    this.router = router;\n    this.flight = {\n      flightId: 0,\n      origin: \"\",\n      destination: \"\",\n      flightdate: \"\",\n      fare: {\n        fareId: 0,\n        fare: \"\",\n        currency: \"\"\n      },\n      inventory: {\n        id: 0,\n        count: 0\n      }\n    };\n  }\n  ngOnInit() {}\n  saveFlight() {\n    this.flightService.addFlight(this.flight).subscribe(data => {\n      console.log(data);\n      this.flight = new Flight();\n      this.router.navigate(['/flight-list']);\n    }, error => console.log(error));\n  }\n  onSubmit() {\n    console.log(this.flight);\n    this.saveFlight();\n  }\n}\nCreateFlightComponent.ɵfac = function CreateFlightComponent_Factory(t) {\n  return new (t || CreateFlightComponent)(i0.ɵɵdirectiveInject(i1.FlightServiceService), i0.ɵɵdirectiveInject(i2.Router));\n};\nCreateFlightComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateFlightComponent,\n  selectors: [[\"app-create-flight\"]],\n  decls: 32,\n  vars: 8,\n  consts: [[1, \"col-md-6\", \"offset-md-3\"], [\"name\", \"cf\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"required\", \"\", \"name\", \"origin\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [\"type\", \"text\", \"id\", \"Destination\", \"name\", \"Destination\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"id\", \"flightDate\", \"name\", \"flightDate\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"Fare\", \"name\", \"Fare\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"FareCurrency\", \"name\", \"FareCurrency\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"No.ofSeats\", \"name\", \"No.ofSeats\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"ng-disabled\", \"cf.origin.$dirty && cf.origin.$invalid\", 1, \"btn\", \"btn-success\"]],\n  template: function CreateFlightComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n      i0.ɵɵtext(2, \"Create Flight\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1)(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateFlightComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n      i0.ɵɵtext(7, \" Origin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 4, 5);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateFlightComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.flight.origin = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\");\n      i0.ɵɵtext(12, \" Destination\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateFlightComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.flight.destination = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 3)(15, \"label\");\n      i0.ɵɵtext(16, \" Flight Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateFlightComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.flight.flightdate = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 3)(19, \"label\");\n      i0.ɵɵtext(20, \" Fare \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateFlightComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.flight.fare.fare = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 3)(23, \"label\");\n      i0.ɵɵtext(24, \" Currency \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateFlightComponent_Template_input_ngModelChange_25_listener($event) {\n        return ctx.flight.fare.currency = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 3)(27, \"label\");\n      i0.ɵɵtext(28, \" No. of Seats \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateFlightComponent_Template_input_ngModelChange_29_listener($event) {\n        return ctx.flight.inventory.count = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"button\", 11);\n      i0.ɵɵtext(31, \" Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(9);\n      i0.ɵɵadvance(8);\n      i0.ɵɵclassProp(\"is-invalid\", _r0.invalid && _r0.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.flight.origin);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.flight.destination);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.flight.flightdate);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.flight.fare.fare);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.flight.fare.currency);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.flight.inventory.count);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\".form-group[_ngcontent-%COMP%]{\\r\\n    padding-bottom:10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3JlYXRlLWZsaWdodC9jcmVhdGUtZmxpZ2h0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7QUFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1ncm91cHtcclxuICAgIHBhZGRpbmctYm90dG9tOjEwcHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,MAAM,QAAQ,WAAW;;;;;AAWlC,OAAM,MAAOC,qBAAqB;EAgBhCC,YAAoBC,aAAmC,EAAUC,MAAc;IAA3D,kBAAa,GAAbD,aAAa;IAAgC,WAAM,GAANC,MAAM;IAfvE,WAAM,GAAU;MACdC,QAAQ,EAAC,CAAC;MACVC,MAAM,EAAE,EAAE;MACVC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE,EAAE;MACdC,IAAI,EAAE;QACFC,MAAM,EAAE,CAAC;QACTD,IAAI,EAAE,EAAE;QACRE,QAAQ,EAAE;OACb;MACDC,SAAS,EAAE;QACPC,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE;;KAEd;EACmF;EAElFC,QAAQ,IAGR;EAEAC,UAAU;IACR,IAAI,CAACb,aAAa,CAACc,SAAS,CAAC,IAAI,CAACC,MAAM,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MACzDC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACF,MAAM,GAAG,IAAIlB,MAAM,EAAE;MAC1B,IAAI,CAACI,MAAM,CAACmB,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;IAC1C,CAAC,EACDC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAAC;EAAC;EAG7BC,QAAQ;IACNJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,MAAM,CAAC;IACxB,IAAI,CAACF,UAAU,EAAE;EACnB;;AAnCWf,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZlCC,8BAAkC;MAC1BA,6BAAa;MAAAA,iBAAK;MAC1BA,+BAAgB;MACNA;QAAA,OAAcC,cAAU;MAAA,EAAC;MAQ3BD,8BAAwB;MACZA,uBAAM;MAAAA,iBAAQ;MACtBA,mCACoC;MAAhCA;QAAA;MAAA,EAA6B;MADjCA,iBACoC;MAMxCA,+BAAwB;MACZA,6BAAW;MAAAA,iBAAQ;MAC3BA,iCAC4D;MAAxDA;QAAA;MAAA,EAAkC;MADtCA,iBAC4D;MAEhEA,+BAAwB;MACZA,6BAAW;MAAAA,iBAAQ;MAC3BA,iCAA6G;MAApDA;QAAA;MAAA,EAAiC;MAA1FA,iBAA6G;MAGjHA,+BAAwB;MACZA,uBAAK;MAAAA,iBAAQ;MACrBA,iCACmD;MAA/CA;QAAA;MAAA,EAAgC;MADpCA,iBACmD;MAEvDA,+BAAwB;MACZA,2BAAS;MAAAA,iBAAQ;MACzBA,iCAC+D;MAA3DA;QAAA;MAAA,EAAoC;MADxCA,iBAC+D;MAInEA,+BAAwB;MACZA,+BAAc;MAAAA,iBAAQ;MAC9BA,kCAC+D;MAA3DA;QAAA;MAAA,EAAsC;MAD1CA,iBAC+D;MAGnEA,mCAAsG;MAACA,wBAAM;MAAAA,iBAAS;;;;MAnCrEA,eAAiD;MAAjDA,wDAAiD;MAC1FA,2CAA6B;MAS7BA,eAAkC;MAAlCA,gDAAkC;MAImBA,eAAiC;MAAjCA,+CAAiC;MAMtFA,eAAgC;MAAhCA,8CAAgC;MAKhCA,eAAoC;MAApCA,kDAAoC;MAOpCA,eAAsC;MAAtCA,oDAAsC","names":["Flight","CreateFlightComponent","constructor","flightService","router","flightId","origin","destination","flightdate","fare","fareId","currency","inventory","id","count","ngOnInit","saveFlight","addFlight","flight","subscribe","data","console","log","navigate","error","onSubmit","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\hackathon\\Airlines-Frontend\\src\\app\\create-flight\\create-flight.component.ts","C:\\hackathon\\Airlines-Frontend\\src\\app\\create-flight\\create-flight.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Flight } from '../flight';\r\nimport { FlightServiceService } from '../services/flight-service.service'\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-flight',\r\n  templateUrl: './create-flight.component.html',\r\n  styleUrls: ['./create-flight.component.css']\r\n})\r\n\r\nexport class CreateFlightComponent implements OnInit {\r\n  flight: Flight ={\r\n    flightId:0,\r\n    origin: \"\",\r\n    destination: \"\",\r\n    flightdate: \"\",\r\n    fare: {\r\n        fareId: 0,\r\n        fare: \"\",\r\n        currency: \"\",\r\n    },\r\n    inventory: {\r\n        id: 0,\r\n        count: 0\r\n    }\r\n}\r\n  constructor(private flightService: FlightServiceService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    \r\n    \r\n  }\r\n\r\n  saveFlight(){\r\n    this.flightService.addFlight(this.flight).subscribe(data => {\r\n      console.log(data);\r\n      this.flight = new Flight();\r\n      this.router.navigate(['/flight-list'])\r\n  },\r\n  error => console.log(error));}\r\n  \r\n\r\n  onSubmit(){\r\n    console.log(this.flight);\r\n    this.saveFlight();\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"col-md-6 offset-md-3\">\r\n    <h3>Create Flight</h3>\r\n<form name=\"cf\">\r\n    <form (ngSubmit) = \"onSubmit()\">\r\n    \r\n        <!--<div class=\"form-group\">\r\n            <label> Flight Number</label>\r\n            <input type=\"text\" class =\"form-control\" id = \"flightNumber\"\r\n                [(ngModel)] = \"flight.flightId\" name = \"flightNumber\">\r\n        </div>-->\r\n    \r\n        <div class=\"form-group\">\r\n            <label> Origin</label>\r\n            <input type=\"text\"required #name = \"ngModel\" [class.is-invalid]=\"name.invalid && name.touched\" class =\"form-control\" name = \"origin\"\r\n                [(ngModel)] = \"flight.origin\"  >\r\n               <!-- <span style=\"color:red\" ng-show=\"cf.origin.$untouched && cf.origin.$invalid\">\r\n                    <span ng-show=\"cf.origin.$error.required\">Origin is required.</span>\r\n                    </span>-->\r\n        </div>\r\n    \r\n        <div class=\"form-group\">\r\n            <label> Destination</label>\r\n            <input type=\"text\" class =\"form-control\" id = \"Destination\"\r\n                [(ngModel)] = \"flight.destination\" name = \"Destination\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label> Flight Date</label>\r\n            <input type=\"date\" class =\"form-control\" id=\"flightDate\" [(ngModel)] = \"flight.flightdate\" name=\"flightDate\">\r\n            \r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label> Fare </label>\r\n            <input type=\"text\" class =\"form-control\" id = \"Fare\"\r\n                [(ngModel)] = \"flight.fare.fare\" name = \"Fare\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label> Currency </label>\r\n            <input type=\"text\" class =\"form-control\" id = \"FareCurrency\"\r\n                [(ngModel)] = \"flight.fare.currency\" name = \"FareCurrency\">\r\n        </div>\r\n        \r\n        \r\n        <div class=\"form-group\">\r\n            <label> No. of  Seats </label>\r\n            <input type=\"text\" class =\"form-control\" id = \"No.ofSeats\"\r\n                [(ngModel)] = \"flight.inventory.count\" name = \"No.ofSeats\">\r\n        </div>\r\n    \r\n        <button class = \"btn btn-success\" type =\"submit\" ng-disabled=\"cf.origin.$dirty && cf.origin.$invalid\"> Submit</button>\r\n</form>\r\n</form>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}